name: Build and Deploy .NET App with Terraform

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Azure Credentials as Environment Variables
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV

      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init \
            -backend-config="storage_account_name=tspontes7xg2dfzesta001" \
            -backend-config="container_name=terraform" \
            -backend-config="key=terraform.tfstate"

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve

      - name: Output Azure App Service Name
        id: output
        run: |
          cd terraform
          echo "::set-output name=app_service_name::$(terraform output -raw app_service_name)"

  build:
    runs-on: windows-latest
    needs: terraform

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x' # Altere para a vers√£o desejada
          include-prerelease: true

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Publish
        run: dotnet publish --configuration Release --output ./output --no-build

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-app
          path: ./output

  deploy:
    runs-on: windows-latest
    needs: [terraform, build]

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: dotnet-app
          path: ./output

      - name: Setup Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.A
